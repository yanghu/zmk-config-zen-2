#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/keypos_def/keypos_42keys.h"

// layer defines
#define DEFAULT 0
#define SYMBOL 1
#define FUNC 2
#define NAV 3
#define NUMPAD 4

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
};

// Sticky Shift/Capslock tap dance
ZMK_BEHAVIOR(td_caps, tap_dance,
        tapping-term-ms = <200>;
        bindings = <&sk LSHFT>, <&kp CAPS>;
    )

// Home row mods
ZMK_BEHAVIOR(hrm, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <125>;
    global-quick-tap;
    bindings = <&kp>, <&kp>;
    )

ZMK_BEHAVIOR(lh_pht, hold_tap,
    flavor = "balanced";
    hold-trigger-key-positions = < 
      RT0 RT1 RT2 RT3 RT4 RT5 
      RM0 RM1 RM2 RM3 RM4 RM5 
      RB0 RB1 RB2 RB3 RB4 RB5 
      RH0 RH1 RH2
    >;
    global-quick-tap;
    tapping-term-ms = <200>;
    quick-tap-ms = <125>;
    bindings = <&kp>, <&kp>;
    )

ZMK_BEHAVIOR(rh_pht, hold_tap,
    flavor = "balanced";
    hold-trigger-key-positions = < 
      LT0 LT1 LT2 LT3 LT4 LT5 
      LM0 LM1 LM2 LM3 LM4 LM5 
      LB0 LB1 LB2 LB3 LB4 LB5 
      LH0 LH1 LH2
    >;
    tapping-term-ms = <200>;
    global-quick-tap;
    quick-tap-ms = <125>;
    bindings = <&kp>, <&kp>;
    )

ZMK_BEHAVIOR(num_lt, hold_tap,
    flavor = "tap-preferred";
    global-quick-tap;
    tapping-term-ms = <200>;
    quick-tap-ms = <125>;
    hold-trigger-key-positions = < 
      RT1 RT2 RT3
      RM1 RM2 RM3
      RB1 RB2 RB3
      RH1
    >;
    bindings = <&mo>, <&kp>;
    )

ZMK_BEHAVIOR(swapper, tri_state,
    bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
    ignored-key-positions = <0>;
    )

// combos
ZMK_COMBO(combo_esc, &kp ESC, RM1 RM2, ALL)
ZMK_COMBO(combo_tab, &kp TAB, LB1 LB2, ALL)

/ {
    // behaviors {
    //   td_caps: td_caps {
    //     compatible = "zmk,behavior-tap-dance";
    //     label = "TD_CAPS";
    //     #binding-cells = <0>;
    //     tapping-term-ms = <200>;
    //     bindings = <&kp LSHFT>, <&kp CAPS>;
    //   };
    // };

        keymap {
                compatible = "zmk,keymap";
                default_layer {
                        label = "QWERTY";
// -----------------------------------------------------------------------------------------
// |  TAB  |  Q  |  W  |  E  |  R  |  T     |   |  Y      |  U   |  I  |  O  |  P  | BKSP |
// | S/CAPS|  A  |  S  |  D  |  F  |  G     |   |  H      |  J   |  K  |  L  |  ;  |  '   |
// | ALT   |  Z  |  X  |  C  |  V  |  B     |   |  N      |  M   |  ,  |  .  |  /  | ENT  |
//                     | GUI | SYM | NAV_ENT|   | FUNC_BSC| SPC  | CTRL|
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &td_caps &lh_pht LCTRL A &lh_pht LSHFT S &kp D &num_lt NUMPAD F &kp G    &kp H &kp J  &rh_pht LCTRL K     &kp L   &kp SEMI &kp SQT
   &kp LALT &kp Z &kp X &kp C &kp V &kp B    &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RET
                  &kp LGUI &mo SYMBOL &lt NAV RET &mt LSHIFT BSPC &kp SPACE &kp LCTRL
                        >;
                };

                symbol_layer {
                        label = "SYMBOL";
// -----------------------------------------------------------------------------------------
// |  ~  |  !  |  @  |  #  |  $  |  %     |   |  ^      |  &  |  *  |  (  |  )  | BKSP    |
// |A-Tab|  [  |  {  |  }  |  ]  | g-␣    |   | c-^     |  -  |  =  |  _  |  :  |  "      |
// |     |  |  |  `  |  \  |  ~  | c-␣    |   |         |  +  |  <  |  >  |  ?  |TO(LAYERS|
//                   | GUI | SYM | NAV_ENT|   | FUNC    | 0   | CTRL|
                        bindings = <
   &kp TILDE &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT    &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &trans
   &trans &kp LBKT &kp RBKT &kp LBRC &kp RBRC &kp LG(SPACE) &kp LC(CARET) &kp MINUS &kp EQUAL &kp UNDER &kp COLON &kp DQT
   &trans &kp PIPE &kp GRAVE &kp BSLH &kp TILDE &kp LC(SPACE)  &none &kp PLUS  &kp LT &kp GT &kp QMARK &trans
                    	     &trans &trans   &trans &mo FUNC &kp N0 &trans
                        >;
                };

                func_layer {
                        label = "FUNC";
// -----------------------------------------------------------------------------------------
// |  F1  | F2    | F3  | F4  | F5  | F6  |   | F7  | F8  | F9  | F10 | F11 |  F12 |
// | BTCLR| BT1   | BT2 | BT3 | BT4 | BT5 |   |     |     |     |     |     |      |
// | SHFT |OUT_TOG|     |     |     |     |   |     |     |     |     |     |      |
//                      | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6           &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4    &trans &trans &trans &trans &trans &trans
   &kp LSHFT  &out OUT_TOG   &trans &trans &trans &trans                          &trans   &trans   &trans &trans    &trans &trans
                             &trans &trans &trans        &trans &trans &trans
                        >;
                };

                nav_layer {
                        label = "NAVI";
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |     |PG_UP|     |     |     | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp LA(N1)  &kp LA(N2) &kp LA(N3) &kp LA(N4) &kp LA(N5)         &none   &kp PG_UP   &none  &none &none  &none
   &trans     &none &kp LSHFT &kp PG_DN &kp LCTRL &none   &kp LEFT &kp DOWN &kp UP &kp RIGHT &none &none
   &trans &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                          	        &trans &trans       &trans &trans &trans   &trans
                        >;
                };

                num_layer {
                        label = "NUMPAD";
// -----------------------------------------------------------------------------------------
// | TAB  |       |       |      |     |       |   |     |  7  |  8  |  9  |  +  |   |
// |S(GUI)|S(CTRL)|S(SHFT)|S(ALT)|     |       |   |     |  4  |  5  |  6  |  -  | * |
// | SHFT | LGUI  |       |      |     |       |   |     |  1  |  2  |  3  |  /  | = |
//                        | GUI  | SYM |NAV_ENT|   |P_ENT|  0  | CTRL|
                        bindings = <
   &trans     &trans     &trans     &trans     &trans &trans              &trans     &kp N7     &kp N8     &kp N9     &kp PLUS     &trans
   &sk LGUI   &sk LCTRL  &sk LSHFT  &sk LALT   &trans &trans              &trans     &kp N4    &kp N5     &kp N6     &kp MINUS   &kp STAR
   &kp LSHFT  &kp LGUI   &trans     &trans     &trans &trans              &trans     &kp N1     &kp N2    &kp N3    &kp SLASH    &kp EQUAL
                             &trans &trans &trans        &kp KP_ENTER &kp N0 &trans
                        >;
                }; // num_layer

        };  // keymap

}; // root
